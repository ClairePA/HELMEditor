/*
 * MonomerManager.java
 *
 * Created on November 24, 2008, 12:59 PM
 */
package org.helm.editor.manager;

import org.helm.notation.MonomerFactory;
import org.helm.editor.editor.MacromoleculeEditor;
import org.helm.editor.worker.MonomerRegistar;
import org.helm.notation.model.Monomer;
import java.awt.Cursor;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 * 
 * @author zhangtianhong
 */
public class MonomerManager extends javax.swing.JDialog {

	private static final String defaultPolymerType = "RNA";
	private MacromoleculeEditor editor;
	private MonomerViewer viewer;

	/** Creates new form MonomerManager */
	public MonomerManager(MacromoleculeEditor editor, boolean modal) {
		super(editor.getFrame(), modal);
		this.editor = editor;
		initComponents();

		refreshContent(defaultPolymerType);

		viewer = MonomerViewer.getNamedInstance("MonomerManager");
		viewer.setModifiableStatus(true);
		monomerViewerPanel.add(viewer);
	}

	public void refreshContent(String polymerType) {
		MonomerTableModel model = new MonomerTableModel(polymerType);
		String[] polymerTypes = model.getPolymerTypes();
		polymerTypeComboBox.setModel(new DefaultComboBoxModel(polymerTypes));
		monomerTable.setModel(model);
		polymerTypeComboBox.setSelectedItem(polymerType);
	}

	public void customInit() {
		registerButton.setEnabled(true);
	}

	public MacromoleculeEditor getEditor() {
		return editor;
	}

	public MonomerViewer getMonomerViewer() {
		return viewer;
	}

	public String getPolymerType() {
		return (String) polymerTypeComboBox.getSelectedItem();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		polymerTypeLabel = new javax.swing.JLabel();
		polymerTypeComboBox = new javax.swing.JComboBox();
		saveButton = new javax.swing.JButton();
		monomerListPanel = new javax.swing.JPanel();
		tableScrollPane = new javax.swing.JScrollPane();
		monomerTable = new org.jdesktop.swingx.JXTable();
		monomerDetailPanel = new javax.swing.JPanel();
		monomerViewerPanel = new javax.swing.JPanel();
		registerButton = new javax.swing.JButton();
		closeButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("HELM Editor Monomer Manager");

		polymerTypeLabel.setText("Polymer Type ");

		polymerTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
		polymerTypeComboBox
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						polymerTypeComboBoxActionPerformed(evt);
					}
				});

		saveButton.setText("Save to Local Disk");
		saveButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				saveButtonActionPerformed(evt);
			}
		});

		monomerListPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Monomer List"));

		monomerTable.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null },
						{ null, null, null, null }, { null, null, null, null },
						{ null, null, null, null } }, new String[] { "Title 1",
						"Title 2", "Title 3", "Title 4" }));
		monomerTable
				.setToolTipText("Double click on any row to view detailed monomer info");
		monomerTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				monomerTableMouseClicked(evt);
			}
		});
		tableScrollPane.setViewportView(monomerTable);

		org.jdesktop.layout.GroupLayout monomerListPanelLayout = new org.jdesktop.layout.GroupLayout(
				monomerListPanel);
		monomerListPanel.setLayout(monomerListPanelLayout);
		monomerListPanelLayout.setHorizontalGroup(monomerListPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(monomerListPanelLayout
						.createSequentialGroup()
						.addContainerGap()
						.add(tableScrollPane,
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								717, Short.MAX_VALUE).addContainerGap()));
		monomerListPanelLayout.setVerticalGroup(monomerListPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(monomerListPanelLayout
						.createSequentialGroup()
						.add(tableScrollPane,
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								237, Short.MAX_VALUE).addContainerGap()));

		monomerDetailPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Monomer Detail"));

		monomerViewerPanel.setBorder(javax.swing.BorderFactory
				.createEtchedBorder());
		monomerViewerPanel.setLayout(new java.awt.BorderLayout());

		registerButton.setText("Register");
		registerButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				registerButtonActionPerformed(evt);
			}
		});

		closeButton.setText("Close");
		closeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				closeButtonActionPerformed(evt);
			}
		});

		org.jdesktop.layout.GroupLayout monomerDetailPanelLayout = new org.jdesktop.layout.GroupLayout(
				monomerDetailPanel);
		monomerDetailPanel.setLayout(monomerDetailPanelLayout);
		monomerDetailPanelLayout
				.setHorizontalGroup(monomerDetailPanelLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(org.jdesktop.layout.GroupLayout.TRAILING,
								monomerDetailPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.add(monomerDetailPanelLayout
												.createParallelGroup(
														org.jdesktop.layout.GroupLayout.TRAILING)
												.add(org.jdesktop.layout.GroupLayout.LEADING,
														monomerViewerPanel,
														org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
														717, Short.MAX_VALUE)
												.add(org.jdesktop.layout.GroupLayout.LEADING,
														monomerDetailPanelLayout
																.createSequentialGroup()
																.add(registerButton)
																.addPreferredGap(
																		org.jdesktop.layout.LayoutStyle.RELATED,
																		403,
																		Short.MAX_VALUE)
																.add(closeButton)))
										.addContainerGap()));
		monomerDetailPanelLayout
				.setVerticalGroup(monomerDetailPanelLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(org.jdesktop.layout.GroupLayout.TRAILING,
								monomerDetailPanelLayout
										.createSequentialGroup()
										.add(monomerViewerPanel,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												256, Short.MAX_VALUE)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(monomerDetailPanelLayout
												.createParallelGroup(
														org.jdesktop.layout.GroupLayout.BASELINE)
												.add(closeButton,
														org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
														28, Short.MAX_VALUE)
												.add(registerButton))
										.addContainerGap()));

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(org.jdesktop.layout.GroupLayout.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap()
								.add(layout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.TRAILING)
										.add(org.jdesktop.layout.GroupLayout.LEADING,
												monomerDetailPanel,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.add(org.jdesktop.layout.GroupLayout.LEADING,
												monomerListPanel,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.add(org.jdesktop.layout.GroupLayout.LEADING,
												layout.createSequentialGroup()
														.add(polymerTypeLabel)
														.add(18, 18, 18)
														.add(polymerTypeComboBox,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																115,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(38, 38, 38)
														.add(saveButton)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(layout
						.createSequentialGroup()
						.addContainerGap()
						.add(layout
								.createParallelGroup(
										org.jdesktop.layout.GroupLayout.BASELINE)
								.add(polymerTypeLabel)
								.add(polymerTypeComboBox,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
								.add(saveButton))
						.addPreferredGap(
								org.jdesktop.layout.LayoutStyle.RELATED)
						.add(monomerListPanel,
								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(
								org.jdesktop.layout.LayoutStyle.RELATED)
						.add(monomerDetailPanel,
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE).addContainerGap()));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void polymerTypeComboBoxActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_polymerTypeComboBoxActionPerformed
		String polymerType = (String) polymerTypeComboBox.getSelectedItem();
		monomerTable.setModel(new MonomerTableModel(polymerType));
	}// GEN-LAST:event_polymerTypeComboBoxActionPerformed

	private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveButtonActionPerformed
		try {
			setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
			MonomerFactory.getInstance().saveMonomerCache();
			setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
			JOptionPane.showMessageDialog(getParent(),
					"Successfully saved monomer DB to local disk",
					"Save Success", JOptionPane.INFORMATION_MESSAGE);
		} catch (Exception ex) {
			Logger.getLogger(MonomerManager.class.getName()).log(Level.SEVERE,
					null, ex);
			JOptionPane.showMessageDialog(getParent(),
					"Error saving monomer database to local disk",
					"Save Failure", JOptionPane.ERROR_MESSAGE);
		}
	}// GEN-LAST:event_saveButtonActionPerformed

	private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_closeButtonActionPerformed
		setVisible(false);
	}// GEN-LAST:event_closeButtonActionPerformed

	private void monomerTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_monomerTableMouseClicked
		if (evt.getClickCount() == 2) {
			int rowIndex = monomerTable.getSelectedRow();
			int row = monomerTable.convertRowIndexToModel(rowIndex);
			if (rowIndex >= 0 && rowIndex < monomerTable.getRowCount()) {
				Monomer monomer = ((MonomerTableModel) monomerTable.getModel())
						.getMonomerList().get(row);
				viewer.setMonomer(monomer);
			}
		}
	}// GEN-LAST:event_monomerTableMouseClicked

	private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_registerButtonActionPerformed
		if (viewer.isValidNewMonomer()) {
			MonomerRegistar registar = new MonomerRegistar(this);
			registar.execute();
			setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
		}
	}// GEN-LAST:event_registerButtonActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton closeButton;
	private javax.swing.JPanel monomerDetailPanel;
	private javax.swing.JPanel monomerListPanel;
	private org.jdesktop.swingx.JXTable monomerTable;
	private javax.swing.JPanel monomerViewerPanel;
	private javax.swing.JComboBox polymerTypeComboBox;
	private javax.swing.JLabel polymerTypeLabel;
	private javax.swing.JButton registerButton;
	private javax.swing.JButton saveButton;
	private javax.swing.JScrollPane tableScrollPane;
	// End of variables declaration//GEN-END:variables
}
