/*******************************************************************************
 * Copyright C 2012, The Pistoia Alliance
 * 
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/
/*
 * ProteinViewer.java
 *
 * Created on Dec 9, 2010, 11:04:58 AM
 */
package org.helm.editor.protein.view;

import org.helm.editor.worker.ProteinViewerUpdater;
import java.awt.Cursor;
import javax.swing.JScrollPane;

/**
 * 
 * @author ZHANGTIANHONG
 */
public class ProteinViewer extends javax.swing.JPanel {

	/** Creates new form ProteinViewer */
	public ProteinViewer() {
		initComponents();
		customInit();
	}

	private void customInit() {
		viewer = new PeptideSequenceViewer();
		JScrollPane scroll = new JScrollPane(viewer);
		sequencePanel.add(scroll);
	}

	public void setNotation(String notation) {
		if (null == notation || notation.length() == 0) {
			viewer.setPeptidePolymer(new PeptidePolymer());
			propertyTextArea.setText("");
			return;
		} else {
			this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
			ProteinViewerUpdater updater = new ProteinViewerUpdater(this,
					notation);
			updater.execute();
		}

	}

	public void setPeptidePolymer(PeptidePolymer polymer) {
		viewer.setPeptidePolymer(polymer);
	}

	public void setMoleculeProperty(String propertyText) {
		propertyTextArea.setText(propertyText);
	}

	public String getNotation() {
		return viewer.getPeptidePolymer().getNotation();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		sequencePopupMenu = new javax.swing.JPopupMenu();
		configurationMenuItem = new javax.swing.JMenuItem();
		notationMenuItem = new javax.swing.JMenuItem();
		sequencePanel = new javax.swing.JPanel();
		propertyPanel = new javax.swing.JPanel();
		propertyScrollPane = new javax.swing.JScrollPane();
		propertyTextArea = new javax.swing.JTextArea();
		actionPanel = new javax.swing.JPanel();
		configButton = new javax.swing.JButton();
		notationButton = new javax.swing.JButton();

		configurationMenuItem.setText("Configure Layout");
		configurationMenuItem
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						configurationMenuItemActionPerformed(evt);
					}
				});
		sequencePopupMenu.add(configurationMenuItem);

		notationMenuItem.setText("Show Notation");
		notationMenuItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				notationMenuItemActionPerformed(evt);
			}
		});
		sequencePopupMenu.add(notationMenuItem);

		sequencePanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Sequences"));
		sequencePanel.setComponentPopupMenu(sequencePopupMenu);
		sequencePanel.setInheritsPopupMenu(true);
		sequencePanel.setLayout(new java.awt.BorderLayout());

		propertyPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Molecular Properties"));
		propertyPanel.setComponentPopupMenu(sequencePopupMenu);

		propertyTextArea.setColumns(20);
		propertyTextArea.setEditable(false);
		propertyTextArea.setFont(new java.awt.Font("Monospaced", 0, 10));
		propertyTextArea.setLineWrap(true);
		propertyTextArea.setRows(5);
		propertyTextArea.setWrapStyleWord(true);
		propertyScrollPane.setViewportView(propertyTextArea);

		org.jdesktop.layout.GroupLayout propertyPanelLayout = new org.jdesktop.layout.GroupLayout(
				propertyPanel);
		propertyPanel.setLayout(propertyPanelLayout);
		propertyPanelLayout.setHorizontalGroup(propertyPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(propertyScrollPane,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 179,
						Short.MAX_VALUE));
		propertyPanelLayout.setVerticalGroup(propertyPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(propertyScrollPane,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 107,
						Short.MAX_VALUE));

		actionPanel.setBorder(javax.swing.BorderFactory
				.createTitledBorder("Actions"));
		actionPanel.setComponentPopupMenu(sequencePopupMenu);

		configButton.setText("Change Layout Parameter");
		configButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
		configButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				configButtonActionPerformed(evt);
			}
		});

		notationButton.setText("Show HELM Notation");
		notationButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
		notationButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				notationButtonActionPerformed(evt);
			}
		});

		org.jdesktop.layout.GroupLayout actionPanelLayout = new org.jdesktop.layout.GroupLayout(
				actionPanel);
		actionPanel.setLayout(actionPanelLayout);
		actionPanelLayout
				.setHorizontalGroup(actionPanelLayout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(org.jdesktop.layout.GroupLayout.TRAILING,
								actionPanelLayout
										.createSequentialGroup()
										.addContainerGap()
										.add(actionPanelLayout
												.createParallelGroup(
														org.jdesktop.layout.GroupLayout.TRAILING,
														false)
												.add(org.jdesktop.layout.GroupLayout.LEADING,
														notationButton,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
														159,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
												.add(org.jdesktop.layout.GroupLayout.LEADING,
														configButton,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
														159,
														org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
										.addContainerGap()));
		actionPanelLayout.setVerticalGroup(actionPanelLayout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(actionPanelLayout
						.createSequentialGroup()
						.add(configButton)
						.addPreferredGap(
								org.jdesktop.layout.LayoutStyle.UNRELATED)
						.add(notationButton)
						.addContainerGap(
								org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(org.jdesktop.layout.GroupLayout.TRAILING,
						layout.createSequentialGroup()
								.add(sequencePanel,
										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
										303, Short.MAX_VALUE)
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
								.add(layout
										.createParallelGroup(
												org.jdesktop.layout.GroupLayout.LEADING,
												false)
										.add(propertyPanel,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)
										.add(actionPanel,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE))));
		layout.setVerticalGroup(layout
				.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(org.jdesktop.layout.GroupLayout.TRAILING,
						layout.createSequentialGroup()
								.add(propertyPanel,
										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addPreferredGap(
										org.jdesktop.layout.LayoutStyle.RELATED)
								.add(actionPanel,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
										org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
										org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
				.add(org.jdesktop.layout.GroupLayout.TRAILING, sequencePanel,
						org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 233,
						Short.MAX_VALUE));
	}// </editor-fold>//GEN-END:initComponents

	private void configButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_configButtonActionPerformed
		viewer.changeLayout();
	}// GEN-LAST:event_configButtonActionPerformed

	private void notationButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_notationButtonActionPerformed
		viewer.showNotation();
	}// GEN-LAST:event_notationButtonActionPerformed

	private void configurationMenuItemActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_configurationMenuItemActionPerformed
		viewer.changeLayout();
	}// GEN-LAST:event_configurationMenuItemActionPerformed

	private void notationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_notationMenuItemActionPerformed
		viewer.showNotation();
	}// GEN-LAST:event_notationMenuItemActionPerformed
		// Variables declaration - do not modify//GEN-BEGIN:variables

	private javax.swing.JPanel actionPanel;
	private javax.swing.JButton configButton;
	private javax.swing.JMenuItem configurationMenuItem;
	private javax.swing.JButton notationButton;
	private javax.swing.JMenuItem notationMenuItem;
	private javax.swing.JPanel propertyPanel;
	private javax.swing.JScrollPane propertyScrollPane;
	private javax.swing.JTextArea propertyTextArea;
	private javax.swing.JPanel sequencePanel;
	private javax.swing.JPopupMenu sequencePopupMenu;
	// End of variables declaration//GEN-END:variables
	private PeptideSequenceViewer viewer;
}
